{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2022-08-23T00:01:43.687931+00:00",
  "repo": "chris-wood/draft-unreliable-ohttp",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "I_kwDOH1ALCM5QRZfd",
      "title": "Conditional gateway behaviour can leak encapsulated information",
      "url": "https://github.com/chris-wood/draft-unreliable-ohttp/issues/3",
      "state": "OPEN",
      "author": "rillian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The role of the Gateway Resource in reliable OHTTP is to decrypt the Encapsulated Request and forward it to the Target Resource. We should probably say something about the privacy risk of using the decrypted contents of the Encapsulated request in any conditional behaviour, since this leaks information which should be private between the Gateway and Client to the Relay, and possibly to external traffic observers.\r\n\r\nAn example of such conditional behaviour would be looking at the `Host` or other header fields in the Encapsulated Request when deciding whether to enforce unreliable OHTTP by returning `406 Not Acceptable`, or deciding whether to return an Encapsulated Response when the `Accept` header received from the Relay allows this choice.\r\n\r\nProbably goes in the Security Considerations and/or Gateway Considerations sections.\r\n\r\n> Note that while it's possible for the Gateway to decide whether to\r\n> require an unreliable OHTTP request based on information in the\r\n> Encapsulated Request, doing so leaks information about the contents\r\n> to the Relay. Implementations must take this into account in\r\n> deployment so they do not violate the privacy properties of the\r\n> OHTTP channel.\r\n",
      "createdAt": "2022-08-22T17:10:02Z",
      "updatedAt": "2022-08-22T20:27:39Z",
      "closedAt": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "body": "I don't think we should allow or recommend this type of behavior, although we can't enforce what happens if someone violates the rule. I think we should just document what can happen if this conditional behavior is implemented. Perhaps we could extend the [differential treatment](https://ietf-wg-ohai.github.io/oblivious-http/draft-ietf-ohai-ohttp.html#name-differential-treatment) section in the main OHTTP spec to include this discussion?",
          "createdAt": "2022-08-22T20:27:39Z",
          "updatedAt": "2022-08-22T20:27:39Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOH1ALCM49VhcS",
      "title": "Add Ralph Giles as an author",
      "url": "https://github.com/chris-wood/draft-unreliable-ohttp/pull/1",
      "state": "MERGED",
      "author": "rillian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Also very minor editorial",
      "createdAt": "2022-08-17T16:18:57Z",
      "updatedAt": "2022-08-17T17:13:55Z",
      "baseRepository": "chris-wood/draft-unreliable-ohttp",
      "baseRefName": "main",
      "baseRefOid": "87e5aff8a322a589ee62ef537235bc7552a10dbc",
      "headRepository": "rillian/draft-unreliable-ohttp",
      "headRefName": "authorship",
      "headRefOid": "e88eee65c7a6a5a84cbbc1e2a6f6978aa1e95739",
      "closedAt": "2022-08-17T16:24:22Z",
      "mergedAt": "2022-08-17T16:24:22Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "545d444cc1187c8a5b6e19e202772f9f73984379"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH1ALCM5AI12z",
          "commit": {
            "abbreviatedOid": "e88eee6"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-17T16:24:17Z",
          "updatedAt": "2022-08-17T16:24:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOH1ALCM49fKUP",
      "title": "Document 406 Not Acceptable",
      "url": "https://github.com/chris-wood/draft-unreliable-ohttp/pull/2",
      "state": "MERGED",
      "author": "rillian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Recommend Relay and Gateway use the `406 Not Acceptable` status code to signal unreliable OHTTP as a requirement to the Client.\r\n\r\nAlso some more editoral.",
      "createdAt": "2022-08-19T21:28:38Z",
      "updatedAt": "2022-08-22T17:32:46Z",
      "baseRepository": "chris-wood/draft-unreliable-ohttp",
      "baseRefName": "main",
      "baseRefOid": "545d444cc1187c8a5b6e19e202772f9f73984379",
      "headRepository": "rillian/draft-unreliable-ohttp",
      "headRefName": "406",
      "headRefOid": "dbab178cbeff38930738625e08f9f8f9fbd2552f",
      "closedAt": "2022-08-22T17:19:39Z",
      "mergedAt": "2022-08-22T17:19:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ea91424703f50bde4230b852b86fba431e2ca3fa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH1ALCM5AZ_zz",
          "commit": {
            "abbreviatedOid": "b21988c"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "Looks good! My only blocking request is to remove the text about conditioning unreliable answers based on decapsulated request information.",
          "createdAt": "2022-08-22T14:05:11Z",
          "updatedAt": "2022-08-22T14:08:56Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nunreliable delivery up to the Relay and Gateway Resources.\r\n```\r\nLet's let the main spec (covering reliable mode) deal with what responses are invalid and not repeat them here.",
              "createdAt": "2022-08-22T14:05:11Z",
              "updatedAt": "2022-08-22T14:08:56Z"
            },
            {
              "originalPosition": 49,
              "body": "```suggestion\r\ncontent type to the Client. It can buffer the request to be sent to the Oblivious\r\nGateway Resource at some point in the future, or choose to forward it immediately.\r\n```\r\n\r\nI don't think we should require buffering here, since that's an implementation-specific decision.",
              "createdAt": "2022-08-22T14:06:01Z",
              "updatedAt": "2022-08-22T14:08:56Z"
            },
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nOHTTP request, i.e., without an Accept header matching \"message/ohttp-ack\",\r\n```",
              "createdAt": "2022-08-22T14:06:37Z",
              "updatedAt": "2022-08-22T14:08:56Z"
            },
            {
              "originalPosition": 100,
              "body": "```suggestion\r\nwith `406 Not Acceptable` to any requests which require reliable return of an\r\n```",
              "createdAt": "2022-08-22T14:07:04Z",
              "updatedAt": "2022-08-22T14:08:56Z"
            },
            {
              "originalPosition": 102,
              "body": "```suggestion\r\nClient, and the Client can then fail or retry with unreliable delivery according to\r\n```",
              "createdAt": "2022-08-22T14:07:19Z",
              "updatedAt": "2022-08-22T14:08:56Z"
            },
            {
              "originalPosition": 105,
              "body": "This is interesting =) Given the privacy implications here, I would recommend we remove this text and file an issue to consider adding it back. ",
              "createdAt": "2022-08-22T14:08:23Z",
              "updatedAt": "2022-08-22T14:08:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH1ALCM5AbAKh",
          "commit": {
            "abbreviatedOid": "b21988c"
          },
          "author": "rillian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-22T16:40:14Z",
          "updatedAt": "2022-08-22T16:40:14Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "I see you're a \"more commas\" person. :)",
              "createdAt": "2022-08-22T16:40:14Z",
              "updatedAt": "2022-08-22T16:40:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH1ALCM5AbAmd",
          "commit": {
            "abbreviatedOid": "b21988c"
          },
          "author": "rillian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-22T16:41:04Z",
          "updatedAt": "2022-08-22T16:41:05Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Ok. This is also a relaxation of your previous wording, so that's fine from my point of view.",
              "createdAt": "2022-08-22T16:41:04Z",
              "updatedAt": "2022-08-22T16:41:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH1ALCM5AbCv7",
          "commit": {
            "abbreviatedOid": "b21988c"
          },
          "author": "rillian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-22T16:44:55Z",
          "updatedAt": "2022-08-22T16:44:55Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "It might make more sense in the Security section, but only after we add the `Accept: message/*` bit. I will move.",
              "createdAt": "2022-08-22T16:44:55Z",
              "updatedAt": "2022-08-22T16:44:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH1ALCM5AbQZ_",
          "commit": {
            "abbreviatedOid": "dbab178"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-22T17:19:35Z",
          "updatedAt": "2022-08-22T17:19:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH1ALCM5AbU0Q",
          "commit": {
            "abbreviatedOid": "b21988c"
          },
          "author": "rillian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-22T17:32:42Z",
          "updatedAt": "2022-08-22T17:32:42Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "https://github.com/chris-wood/draft-unreliable-ohttp/issues/3",
              "createdAt": "2022-08-22T17:32:42Z",
              "updatedAt": "2022-08-22T17:32:42Z"
            }
          ]
        }
      ]
    }
  ]
}